generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  username   String    @unique @db.VarChar(60)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  Event      Event[]
  Schedule   Schedule?
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model Event {
  id                Int              @id @default(autoincrement())
  name              String
  location          type_of_location
  description       String
  host              Int
  slug              String           @unique @db.VarChar(100)
  address           String?
  created_at        DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at        DateTime?        @default(now()) @db.Timestamptz(6)
  startDateRange    DateTime         @db.Date
  endDateRange      DateTime         @db.Date
  durationInMinutes Int
  User              User             @relation(fields: [host], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Schedule {
  id         Int       @id @default(autoincrement())
  user_id    Int       @unique
  days       Int[]
  time_slots Json      @db.Json
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  User       User      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum type_of_location {
  virtual
  in_person
}
